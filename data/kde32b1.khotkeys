[Data]
DataCount=1

[Data_1]
Comment=This group contains various examples demonstrating most of the features of KHotkeys. (Note that this group and all its actions are disabled by default.)\n
DataCount=8
Enabled=false
Name=Examples
SystemGroup=0
Type=ACTION_DATA_GROUP

[Data_1Conditions]
Comment=
ConditionsCount=0

[Data_1_1]
Comment=After pressing Ctrl+Alt+I, the KSIRC window will be activated, if it exists. Simple.\n
Enabled=false
Name=Activate KSIRC Window
Type=ACTIVATE_WINDOW_SHORTCUT_ACTION_DATA

[Data_1_1Actions]
ActionsCount=1

[Data_1_1Actions0]
Type=ACTIVATE_WINDOW

[Data_1_1Actions0Window]
Comment=KSIRC window
WindowsCount=1

[Data_1_1Actions0Window0]
Class=ksirc
ClassType=1
Comment=KSIRC
Role=
RoleType=0
Title=
TitleType=0
Type=SIMPLE
WindowTypes=33

[Data_1_1Conditions]
Comment=
ConditionsCount=0

[Data_1_1Triggers]
Comment=Simple_action
TriggersCount=1

[Data_1_1Triggers0]
Key=Alt+Ctrl+I
Type=SHORTCUT

[Data_1_2]
Comment=After pressing Alt+Ctrl+H, 'Hello' input will be simulated just like if you typed it. Especially useful if you're lazy to type things like 'unsigned'. Every keypress in the input is separated by a colon ':' . Note that the keypresses mean really keypresses, so you have to write what you'd really press on the keyboard. In the table below, left column shows the input and the right column shows what to type.\n\n"enter" (i.e. new line)                Enter or Return\na (i.e. small a)                          A\nA (i.e. capital a)                       Shift+A\n: (colon)                                  Shift+;\n' '  (space)                              Space\n
Enabled=false
Name=Type 'Hello'
Type=KEYBOARD_INPUT_SHORTCUT_ACTION_DATA

[Data_1_2Actions]
ActionsCount=1

[Data_1_2Actions0]
Input=Shift+H:E:L:L:O\n
IsDestinationWindow=false
Type=KEYBOARD_INPUT

[Data_1_2Conditions]
Comment=
ConditionsCount=0

[Data_1_2Triggers]
Comment=Simple_action
TriggersCount=1

[Data_1_2Triggers0]
Key=Alt+Ctrl+H
Type=SHORTCUT

[Data_1_3]
Comment=This action runs Konsole, after pressing Ctrl+Alt+T.\n
Enabled=false
Name=Run Konsole
Type=COMMAND_URL_SHORTCUT_ACTION_DATA

[Data_1_3Actions]
ActionsCount=1

[Data_1_3Actions0]
CommandURL=konsole
Type=COMMAND_URL

[Data_1_3Conditions]
Comment=
ConditionsCount=0

[Data_1_3Triggers]
Comment=Simple_action
TriggersCount=1

[Data_1_3Triggers0]
Key=Alt+Ctrl+T
Type=SHORTCUT

[Data_1_4]
Comment=Read the comment on action "Type 'Hello'" first.\n\nQt Designer uses Ctrl+F4 for closing windows (maybe because MS Windows does it that way *shrug*). But Ctrl+F4 in KDE stands for going to virtual desktop 4, so it doesn't work in Qt Designer, and also, Qt Designer doesn't use KDE's standard Ctrl+W for closing the window.\n\nBut the problem can be solved by remaping Ctrl+W to Ctrl+F4 when the active window is Qt Designer. When Qt Designer is active, every time Ctrl+W is pressed, Ctrl+F4 will be sent to Qt Designer instead. In other applications, Ctrl+W remains working the usual way of course.\n\nWe now need to specify three things: A new shortcut trigger on 'Ctrl+W', a new keyboard input action sending Ctrl+F4, and a new condition that the active window is Qt Designer.\nQt Designer seems to always have title 'Qt Designer by Trolltech', so the condition will check for the active window having that title.\n
Enabled=false
Name=Remap Ctrl+W to Ctrl+F4 in Qt Designer
Type=GENERIC_ACTION_DATA

[Data_1_4Actions]
ActionsCount=1

[Data_1_4Actions0]
Input=Ctrl+F4
IsDestinationWindow=false
Type=KEYBOARD_INPUT

[Data_1_4Conditions]
Comment=
ConditionsCount=1

[Data_1_4Conditions0]
Type=ACTIVE_WINDOW

[Data_1_4Conditions0Window]
Comment=Qt Designer
WindowsCount=1

[Data_1_4Conditions0Window0]
Class=
ClassType=0
Comment=
Role=
RoleType=0
Title=Qt Designer by Trolltech
TitleType=2
Type=SIMPLE
WindowTypes=33

[Data_1_4Triggers]
Comment=
TriggersCount=1

[Data_1_4Triggers0]
Key=Ctrl+W
Type=SHORTCUT

[Data_1_5]
Comment=By pressing Alt+Ctrl+W a DCOP call will be performed that will show the minicli. You can use any kind of DCOP call, just like using the command line 'dcop' tool.\n
Enabled=false
Name=Perform DCOP call 'kdesktop KDesktopIface popupExecuteCommand()'
Type=DCOP_SHORTCUT_ACTION_DATA

[Data_1_5Actions]
ActionsCount=1

[Data_1_5Actions0]
Arguments=
Call=popupExecuteCommand
RemoteApp=kdesktop
RemoteObj=KDesktopIface
Type=DCOP

[Data_1_5Conditions]
Comment=
ConditionsCount=0

[Data_1_5Triggers]
Comment=Simple_action
TriggersCount=1

[Data_1_5Triggers0]
Key=Alt+Ctrl+W
Type=SHORTCUT

[Data_1_6]
Comment=Read the comment on action "Type 'Hello'" first.\n\nJust like the "Type 'Hello'" action, this one simulates a keyboard input, specifically, after pressing Ctrl+Alt+B, it sends B to XMMS (B in XMMS jumps to the next song). The 'Send to specific window' checkbox is checked and a window with its class containing 'XMMS_Player' is specified; this will make the input always be sent to this window. This way, you can control XMMS even if it's e.g. on a different virtual desktop.\n\n(Run 'xprop' and click on the XMMS window and search for WM_CLASS to see 'XMMS_Player').\n
Enabled=false
Name=Next in XMMS
Type=KEYBOARD_INPUT_SHORTCUT_ACTION_DATA

[Data_1_6Actions]
ActionsCount=1

[Data_1_6Actions0]
Input=B
IsDestinationWindow=true
Type=KEYBOARD_INPUT

[Data_1_6Actions0DestinationWindow]
Comment=XMMS window
WindowsCount=1

[Data_1_6Actions0DestinationWindow0]
Class=XMMS_Player
ClassType=1
Comment=XMMS Player window
Role=
RoleType=0
Title=
TitleType=0
Type=SIMPLE
WindowTypes=33

[Data_1_6Conditions]
Comment=
ConditionsCount=0

[Data_1_6Triggers]
Comment=Simple_action
TriggersCount=1

[Data_1_6Triggers0]
Key=Alt+Ctrl+B
Type=SHORTCUT

[Data_1_7]
Comment=Ok, Konqi in KDE3.1 has tabs, and now you can also have gestures. No need to use other browsers >;).\n\nJust press the middle mouse button and start drawing one of the gestures, and after you're finished, release the mouse button. If you only need to paste the selection, it still works, simply only click the middle mouse button. (You can change the mouse button to use in the global settings).\n\nRight now, there are these gestures available:\nmove right and back left - Forward (ALt+Right)\nmove left and back right - Back (Alt+Left)\nmove up and back down  - Up (Alt+Up)\ncircle anticlockwise - Reload (F5)\n (As soon as I find out which ones are in Opera or Mozilla, I'll add more and make sure they are the same. Or if you do it yourself, feel free to help me and send me your khotkeysrc.)\n\nThe gestures shapes (some of the dialogs are from KGesture, thanks to Mike Pilone) can be simply entered by performing them in the configuration dialog. You can also look at your numeric pad to help you, gestures are recognized like a 3x3 grid of fields, numbered 1 to 9.\n\nNote that you must perform exactly the gesture to trigger the action. Because of this, it's possible to enter more gestures for the action. You should try to avoid complicated gestures where you change the direction of mouse moving more than once (i.e. do e.g. 45654 or 74123 as they are simple to perform but e.g. 1236987 may be already quite difficult).\n\nThe condition for all gestures are defined in this group. All these gestures are active only if the active window is Konqueror (class contains 'konqueror').\n
DataCount=4
Enabled=false
Name=Konqi Gestures
SystemGroup=0
Type=ACTION_DATA_GROUP

[Data_1_7Conditions]
Comment=Konqueror window
ConditionsCount=1

[Data_1_7Conditions0]
Type=ACTIVE_WINDOW

[Data_1_7Conditions0Window]
Comment=Konqueror
WindowsCount=1

[Data_1_7Conditions0Window0]
Class=konqueror
ClassType=1
Comment=Konqueror
Role=
RoleType=0
Title=
TitleType=0
Type=SIMPLE
WindowTypes=33

[Data_1_7_1]
Comment=
Enabled=false
Name=Back
Type=KEYBOARD_INPUT_GESTURE_ACTION_DATA

[Data_1_7_1Actions]
ActionsCount=1

[Data_1_7_1Actions0]
Input=Alt+Left
IsDestinationWindow=false
Type=KEYBOARD_INPUT

[Data_1_7_1Conditions]
Comment=
ConditionsCount=0

[Data_1_7_1Triggers]
Comment=Gesture_triggers
TriggersCount=3

[Data_1_7_1Triggers0]
Gesture=65456
Type=GESTURE

[Data_1_7_1Triggers1]
Gesture=5456
Type=GESTURE

[Data_1_7_1Triggers2]
Gesture=6545
Type=GESTURE

[Data_1_7_2]
Comment=
Enabled=false
Name=Forward
Type=KEYBOARD_INPUT_GESTURE_ACTION_DATA

[Data_1_7_2Actions]
ActionsCount=1

[Data_1_7_2Actions0]
Input=Alt+Right
IsDestinationWindow=false
Type=KEYBOARD_INPUT

[Data_1_7_2Conditions]
Comment=
ConditionsCount=0

[Data_1_7_2Triggers]
Comment=Gesture_triggers
TriggersCount=3

[Data_1_7_2Triggers0]
Gesture=45654
Type=GESTURE

[Data_1_7_2Triggers1]
Gesture=5654
Type=GESTURE

[Data_1_7_2Triggers2]
Gesture=4565
Type=GESTURE

[Data_1_7_3]
Comment=
Enabled=false
Name=Up
Type=KEYBOARD_INPUT_GESTURE_ACTION_DATA

[Data_1_7_3Actions]
ActionsCount=1

[Data_1_7_3Actions0]
Input=Alt+Up
IsDestinationWindow=false
Type=KEYBOARD_INPUT

[Data_1_7_3Conditions]
Comment=
ConditionsCount=0

[Data_1_7_3Triggers]
Comment=Gesture_triggers
TriggersCount=3

[Data_1_7_3Triggers0]
Gesture=25852
Type=GESTURE

[Data_1_7_3Triggers1]
Gesture=2585
Type=GESTURE

[Data_1_7_3Triggers2]
Gesture=5852
Type=GESTURE

[Data_1_7_4]
Comment=
Enabled=false
Name=Reload
Type=KEYBOARD_INPUT_GESTURE_ACTION_DATA

[Data_1_7_4Actions]
ActionsCount=1

[Data_1_7_4Actions0]
Input=F5
IsDestinationWindow=false
Type=KEYBOARD_INPUT

[Data_1_7_4Conditions]
Comment=
ConditionsCount=0

[Data_1_7_4Triggers]
Comment=Gesture_triggers
TriggersCount=3

[Data_1_7_4Triggers0]
Gesture=123698741
Type=GESTURE

[Data_1_7_4Triggers1]
Gesture=1236987412
Type=GESTURE

[Data_1_7_4Triggers2]
Gesture=4123698741
Type=GESTURE

[Data_1_8]
Comment=After pressing Win+E (Tux+E), WWW browser will be launched and it will open http://www.kde.org . You may run all kind of commands you can run in minicli (Alt+F2).\n
Enabled=false
Name=Go to KDE Website
Type=COMMAND_URL_SHORTCUT_ACTION_DATA

[Data_1_8Actions]
ActionsCount=1

[Data_1_8Actions0]
CommandURL=http://www.kde.org
Type=COMMAND_URL

[Data_1_8Conditions]
Comment=
ConditionsCount=0

[Data_1_8Triggers]
Comment=Simple_action
TriggersCount=1

[Data_1_8Triggers0]
Key=Win+E
Type=SHORTCUT

[Gestures]
Disabled=false
MouseButton=2
Timeout=1000

[Main]
Autostart=true
Disabled=false
Version=2
ImportId=kde32b1
